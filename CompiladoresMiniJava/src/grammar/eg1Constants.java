/* Generated By:JavaCC: Do not edit this line. eg1Constants.java */
package grammar;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface eg1Constants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int COMMENT = 5;
  /** RegularExpression Id. */
  int COMMENT1 = 6;
  /** RegularExpression Id. */
  int LPAREN = 7;
  /** RegularExpression Id. */
  int RPAREN = 8;
  /** RegularExpression Id. */
  int LSQPAREN = 9;
  /** RegularExpression Id. */
  int RSQPAREN = 10;
  /** RegularExpression Id. */
  int LBRACE = 11;
  /** RegularExpression Id. */
  int RBRACE = 12;
  /** RegularExpression Id. */
  int SEMICOLON = 13;
  /** RegularExpression Id. */
  int DOT = 14;
  /** RegularExpression Id. */
  int COMMA = 15;
  /** RegularExpression Id. */
  int ASSIGN = 16;
  /** RegularExpression Id. */
  int OP = 17;
  /** RegularExpression Id. */
  int NOT = 18;
  /** RegularExpression Id. */
  int BOOLEAN = 19;
  /** RegularExpression Id. */
  int CLASS = 20;
  /** RegularExpression Id. */
  int ELSE = 21;
  /** RegularExpression Id. */
  int FALSE = 22;
  /** RegularExpression Id. */
  int IF = 23;
  /** RegularExpression Id. */
  int WHILE = 24;
  /** RegularExpression Id. */
  int INTEGER = 25;
  /** RegularExpression Id. */
  int LENGTH = 26;
  /** RegularExpression Id. */
  int MAIN = 27;
  /** RegularExpression Id. */
  int NEW = 28;
  /** RegularExpression Id. */
  int PUBLIC = 29;
  /** RegularExpression Id. */
  int RETURN = 30;
  /** RegularExpression Id. */
  int STATIC = 31;
  /** RegularExpression Id. */
  int STRING = 32;
  /** RegularExpression Id. */
  int THIS = 33;
  /** RegularExpression Id. */
  int TRUE = 34;
  /** RegularExpression Id. */
  int PRINT = 35;
  /** RegularExpression Id. */
  int VOID = 36;
  /** RegularExpression Id. */
  int EXTENDS = 37;
  /** RegularExpression Id. */
  int ALL = 38;
  /** RegularExpression Id. */
  int DIGIT = 39;
  /** RegularExpression Id. */
  int NUM = 40;
  /** RegularExpression Id. */
  int ID = 41;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\t\"",
    "<COMMENT>",
    "<COMMENT1>",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
    "\";\"",
    "\".\"",
    "\",\"",
    "\"=\"",
    "<OP>",
    "\"!\"",
    "\"boolean\"",
    "\"class\"",
    "\"else\"",
    "\"false\"",
    "\"if\"",
    "\"while\"",
    "\"int\"",
    "\"length\"",
    "\"main\"",
    "\"new\"",
    "\"public\"",
    "\"return\"",
    "\"static\"",
    "\"String\"",
    "\"this\"",
    "\"true\"",
    "\"System.out.println\"",
    "\"void\"",
    "\"extends\"",
    "<ALL>",
    "<DIGIT>",
    "<NUM>",
    "<ID>",
    "\"$\"",
  };

}
